# SPDX-FileCopyrightText: 2023 The WAG development team
# SPDX-FileCopyrightText: 2023 The git-cliff development team
#
# SPDX-License-Identifier: CC0-1.0

[changelog]
header = """
[![logo](https://raw.githubusercontent.com/frack113/MalwareTracesGenerator/media/logo.svg)](https://github.com/frack113/MalwareTracesGenerator/)\n
"""
body = """
{%- macro remote_url() -%}
  https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}
{%- endmacro -%}

{% macro print_commit(commit) -%}
    - {% if commit.scope %}*({{ commit.scope }})* {% endif %}\
        {% if commit.breaking %}[**breaking**] {% endif %}\
        {{ commit.message | upper_first }} - \
        ([{{ commit.id | truncate(length=7, end="") }}]({{ self::remote_url() }}/commit/{{ commit.id }}))\
{% endmacro -%}

{% if version %}\
    {% if previous.version %}\
        ## [{{ version | trim_start_matches(pat="v") }}]\
          ({{ self::remote_url() }}/compare/{{ previous.version }}..{{ version }}) - {{ timestamp | date(format="%Y-%m-%d") }}
    {% else %}\
        ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
    {% endif %}\
{% else %}\
    ## [unreleased]
{% endif %}\

{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | striptags | trim | upper_first }}
    {% for commit in commits
    | filter(attribute="scope")
    | sort(attribute="scope") %}
        {{ self::print_commit(commit=commit) }}
    {%- endfor -%}
    {% raw %}\n{% endraw %}\
    {%- for commit in commits %}
        {%- if not commit.scope -%}
            {{ self::print_commit(commit=commit) }}
        {% endif -%}
    {% endfor -%}
{% endfor %}\n
"""
footer = """
<!-- generated by git-cliff -->
"""
trim = true
postprocessors = [
  { pattern = '<REPO>', replace = "https://github.com/frack113/MalwareTracesGenerator/" },
]

[git]
conventional_commits = true
filter_unconventional = true
split_commits = false
commit_preprocessors = [
  { pattern = '\((\w+\s)?#([0-9]+)\)', replace = "([#${2}](<REPO>/issues/${2}))" },
  { pattern = '.*', replace_command = 'typos --write-changes -' },
]
commit_parsers = [
  { message = "^feat", group = "<!-- 0 -->✨ Features" },
  { message = "^fix", group = "<!-- 1 -->🐛 Bug Fixes" },
  { message = "^doc", group = "<!-- 2 -->📚 Documentation" },
  { message = "^style", group = "<!-- 3 -->💄 Styling" },
  { message = "^refactor", group = "<!-- 4 -->🔨 Refactor" },
  { message = "^perf", group = "<!-- 5 -->⚡ Performance" },
  { message = "^test", group = "<!-- 6 -->🚨 Testing" },
  { message = "^build", group = "<!-- 7 -->📦 Build" },
  { message = "^ci", group = "<!-- 8 -->🤖 CI" },
  { message = "^chore", group = "<!-- 9 -->🧹 Miscellaneous" },
  { message = "^revert", group = "<!-- 10 -->⏪ Revert" },
]
protect_breaking_commits = false
filter_commits = false
tag_pattern = "v[0-9].*"
skip_tags = ""
ignore_tags = ""
topo_order = false
sort_commits = "newest"
